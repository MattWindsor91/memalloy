"BASIC"
          
let id = [EV]
let uni = EV * EV

let M = R | W
       
let po = sb
let poloc = po & sloc
let addr = ad
let ctrl = cd
let data = dd
let loc = sloc
let thd = sthd
let ext = !sthd
  
let rfe = rf \ sthd
let rfi = rf & sthd
let coe = co \ sthd
let coi = co & sthd

let if_zero = (id & (ctrl;ctrl^-1)) \ (rf^-1;rf)

let imm(r) = r \ (r;r+)

let unforced_co =
  (imm(co); imm(co); (imm(co))^-1) \ (rf?; (po; (rf^-1)?)?)
