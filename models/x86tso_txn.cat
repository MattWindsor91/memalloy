(* 
This file is a slightly modified version of one that is distributed with 
the Herd tool, the licence of which is given below. The original file is
available online:
https://github.com/herd/herdtools/blob/master/herd/x86tso.cat
*)

(*********************************************************************)
(*                        Herd                                       *)
(*                                                                   *)
(* Luc Maranget, INRIA Paris-Rocquencourt, France.                   *)
(* Jade Alglave, University College London, UK.                      *)
(*                                                                   *)
(*  Copyright 2013 Institut National de Recherche en Informatique et *)
(*  en Automatique and the authors. All rights reserved.             *)
(*  This file is distributed  under the terms of the Lesser GNU      *)
(*  General Public License.                                          *)
(*********************************************************************)


"X86"

include "basic_H.cat"
include "ftxn.cat" (* subsumes fr.cat *)
acyclic po-loc | rf | fr | co as Uniproc

empty atom & (fre;coe) as AtomicRMW

let ppo = (W * W) & po | (R * M) & po

let LOCKED = domain(atom) | range(atom)
let tbegin_barrier = po & into(stxn)
let tend_barrier = po & outof(stxn)
let implied = [LOCKED]; po | po; [LOCKED] | tbegin_barrier | tend_barrier
                                     
let hb = mfence | implied | ppo | rfe | fr | co
acyclic hb as Order

let com = rf | fr | co | co;rf
acyclic stronglift(com, stxn) as StrongIsolation
acyclic stronglift(hb, stxn) as TxnOrder
empty ftxn & ((fre|coe); rfe) as AtomicFtxn
